
agent ScheduleTask {
	module Functions functions;
	module Prelude prelude;
	
	types core {
		formula my_plan(list);
		formula task(string, list);
	}
	
//	rule +!main(list args) {
//		!example();
//	}
	
	rule +!example() {
		+my_plan([task("step1", []), task("step2", [])]);
		
		while (my_plan(list X)) {
			!next_step();
			!execute();
		}
	}
	
	rule +!next_step() : my_plan([funct F | list other]) {
		-+task(functions.valueAsString(F,0), functions.valueAsList(F,1));
		if (prelude.isEmpty(other)) {
			-my_plan([F]);
		} else {
			-+my_plan(other);
		}
	}
	
	rule +!execute() : task(string X, list Y) {
		!doTask(X, Y);
	}
	
	rule +!dropTask() : task(string T, list P) {
		-task(T, P);
	}
	
	rule +!doTask(string X, list Y) {}
}
